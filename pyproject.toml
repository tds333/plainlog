[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "plainlog"
description = 'Logging made simple and easy.'
readme = "README.md"
requires-python = ">=3.8"
license = "Apache-2.0 OR MIT"
license-files = { globs = ["LICENSES/*"] }
keywords = []
authors = [
  { name = "Wolfgang Langner", email = "tds333@mailbox.org" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Topic :: System :: Logging",
  "Intended Audience :: Developers",
  "Natural Language :: English",
  "License :: OSI Approved :: MIT License",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = []
dynamic = ["version"]

[project.optional-dependencies]
rich = [
  "rich",
]
dev = [
  "pytest",
  "pytest-cov",
  "rich",
]


[project.urls]
Documentation = "https://github.com/tds333/plainlog#readme"
Issues = "https://github.com/tds333/plainlog/issues"
Source = "https://github.com/tds333/plainlog"

[tool.hatch.version]
path = "src/plainlog/__version__.py"

[tool.hatch.envs.default]
dependencies = [
  "pytest",
  "pytest-cov",
  "rich",
]
[tool.hatch.envs.default.scripts]
tests = "pytest {args}"
cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=src/plainlog --cov=tests {args}"
no-cov = "cov --no-cov {args}"

[[tool.hatch.envs.test.matrix]]
python = ["38", "39", "310", "311"]

[tool.coverage.run]
branch = true
parallel = true
omit = [
  "src/plainlog/__version__.py",
]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["tests"]

[tool.black]
line-length = 100

[tool.ruff]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    # "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]
